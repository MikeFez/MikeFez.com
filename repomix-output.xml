This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: bin/, dbdocs/, .git/, package-lock.json
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
_includes/
  base-layout.njk
  post-layout.njk
css/
  site.css
posts/
  2019/
    blog-post-1.md
    blog-post-2.md
tests/
  .eleventy.test.js
.editorconfig
.eleventy.js
.eleventyignore
.gitignore
About.md
index.njk
LICENSE
package.json
README.md
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="_includes/base-layout.njk">
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Eleventy Blog</title>

  <link rel="stylesheet" href="/css/site.css">
  <link href="https://fonts.googleapis.com/css?family=Roboto+Slab:700|Roboto&display=fallback" rel="stylesheet">
</head>
<body>
<header>
  <a href="/" class="link--home">My Blog</a>
  <a href="/About" class="link--about">About</a>
</header>
<main>
  {{ content | safe }}
</main>
<footer>&copy; My Blog</footer>
</body>
</html>
</file>

<file path="_includes/post-layout.njk">
---
layout: base-layout.njk
---
<article>
  <h1>{{ title }}</h1>
  <time datetime="{{ date | dateIso }}">{{ date | dateReadable }}</time>
  {{ content | safe }}
</article>
</file>

<file path="css/site.css">
* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  padding: 10px 8px;
  font-size: 19px;
  font-family: 'Roboto', sans-serif;
}

@media screen and (min-width: 768px) {
  body {
    max-width: 768px;
    margin: 0 auto;
  }
}

header {
  display: flex;
  align-items: center; /* Vertically align */
  padding: 5px 16px;
  color: white;
  background-color: #0747A6;
  border-radius: 8px;
}

header > a:link,
header > a:visited,
header > a:hover {
  color: white;
  text-decoration: none;
}

header > a:hover {
  text-decoration: underline;
}

.link--home {
  flex-grow: 1;
  font-size: 2em;
}

.link--about {
  flex-grow: 1;
  font-size: 1em;
  text-align: right;
}

main {
  padding: 5px 16px;
  word-wrap:break-word;
}

footer {
  padding: 35px 0 25px 0;
  text-align: center;
  font-size: 0.8em;
  color: #666666;
}

h1,
h2 {
  font-family: 'Roboto Slab', sans-serif;
  margin: 25px 0 2px 0;
}

h1 {
  font-size: 2em;
}

h1 > a:link,
h1 > a:visited {
  text-decoration: none;
}

h1 > a:hover {
  color: #20399daa;
  text-decoration: underline;
}

h2 {
  font-size: 1.5em;
}

a:link,
a:visited {
  color: #20399d;
}

a:hover {
  color: #20399daa;
}

time {
  color: #666666;
}

article img {
  width: 100%;
  height: auto;
}
</file>

<file path="posts/2019/blog-post-1.md">
---
layout: post-layout.njk
title: This Is My First Ever Post
date: 2019-05-30
tags: ['post']
---
<!-- Excerpt Start -->

This is the first post on my blog.

<!-- Excerpt End -->

Eleventy is super fresh init.


## Want your own blog?
The code for this blog is available on GitHub:
[https://github.com/JonUK/eleventy-blog](https://github.com/JonUK/eleventy-blog)

<img src="https://octodex.github.com/images/stormtroopocat.jpg">
</file>

<file path="posts/2019/blog-post-2.md">
---
layout: post-layout.njk
title: How To Get Rich Quick
date: 2019-06-01
tags: ['post']
---
<!-- Excerpt Start -->

Buy the latest and greatest cryptocurrency that no-one has heard of.

<!-- Excerpt End -->

## Legal Stuff
We do not accept any liability for any loss or damage.
</file>

<file path="tests/.eleventy.test.js">
const eleventyConfig = require('@11ty/eleventy/src/EleventyConfig');
const eleventy = require('../.eleventy.js');

let dateReadableFunc;

beforeAll(() => {
  // Populate the config object with all the filters & shortcodes
  eleventy(eleventyConfig);

  dateReadableFunc = eleventyConfig.nunjucksFilters['dateReadable'];
});

describe('dateReadable filter', () => {

  it.each([
    ['2019-06-01T00:00:00.000Z', 'June 1, 2019'],
    ['2019-06-02T00:00:00.000Z', 'June 2, 2019'],
    ['2019-07-01T00:00:00.000Z', 'July 1, 2019'],
    ['2020-01-01T00:00:00.000Z', 'January 1, 2020'],
    ['2020-01-01T01:00:00.000Z', 'January 1, 2020'],
    ['2020-01-01T23:59:59.000Z', 'January 1, 2020'],
    ['2020-12-31T23:59:59.000Z', 'December 31, 2020']
  ])('can parse %s to %s', (inputString, expected) => {
    const outputDateString = dateReadableFunc(inputString);
    expect(outputDateString).toEqual(expected);
  });

});
</file>

<file path=".editorconfig">
# Top-most EditorConfig file
root = true

[*]
end_of_line = crlf
charset = utf-8
indent_style = space
indent_size = 2
</file>

<file path=".eleventy.js">
const moment = require('moment');

moment.locale('en');

module.exports = function (eleventyConfig) {

  eleventyConfig.addFilter('dateIso', date => {
    return moment(date).toISOString();
  });

  eleventyConfig.addFilter('dateReadable', date => {
    return moment(date).utc().format('LL'); // E.g. May 31, 2019
  });

  eleventyConfig.addShortcode('excerpt', article => extractExcerpt(article));

  // Folders to copy to output folder
  eleventyConfig.addPassthroughCopy("css");
};

function extractExcerpt(article) {
  if (!article.hasOwnProperty('templateContent')) {
    console.warn('Failed to extract excerpt: Document has no property "templateContent".');
    return null;
  }

  let excerpt = null;
  const content = article.templateContent;

  // The start and end separators to try and match to extract the excerpt
  const separatorsList = [
    { start: '<!-- Excerpt Start -->', end: '<!-- Excerpt End -->' },
    { start: '<p>', end: '</p>' }
  ];

  separatorsList.some(separators => {
    const startPosition = content.indexOf(separators.start);

    // This end position could use "lastIndexOf" to return all the paragraphs rather than just the first
    // paragraph when matching is on "<p>" and "</p>".
    const endPosition = content.indexOf(separators.end);

    if (startPosition !== -1 && endPosition !== -1) {
      excerpt = content.substring(startPosition + separators.start.length, endPosition).trim();
      return true; // Exit out of array loop on first match
    }
  });

  return excerpt;
}
</file>

<file path=".eleventyignore">
# We don't want Eleventy to include the README.md as a website content file
README.md

# Unit tests should be ignored by Eleventy
tests/
</file>

<file path=".gitignore">
# _site is where the static generated files are copied to
_site/

node_modules/
.idea/
</file>

<file path="About.md">
---
layout: base-layout.njk
---
# About this blog

This blog was created using the Static Site Generator [Eleventy](https://www.11ty.io/) (aka 11ty).
New posts can quickly and easily be added to this blog just by adding new Markdown files.

The following article details how this blog was created.

## Creating A Blog With Eleventy
[https://keepinguptodate.com/pages/2019/06/creating-blog-with-eleventy/](https://keepinguptodate.com/pages/2019/06/creating-blog-with-eleventy/)
</file>

<file path="index.njk">
---
layout: base-layout.njk
pagination:
  data: collections.post
  size: 10
  reverse: true
  alias: posts
---
{% for post in posts %}
  <article>

    <h1>
      <a href="{{ post.url | url }}">{{ post.data.title }}</a>
    </h1>

    <time datetime="{{ post.date | dateIso }}">{{ post.date | dateReadable }}</time>

    {% excerpt post %}

    <a href="{{ post.url | url }}">Read more</a>

  </article>
{% endfor %}
</file>

<file path="package.json">
{
  "name": "eleventy-blog",
  "version": "1.1.0",
  "description": "An example blog site using Eleventy that covers fundamental functionality",
  "scripts": {
    "build": "npx eleventy",
    "serve": "npx eleventy --serve",
    "debug": "DEBUG=* npx eleventy",
    "test": "jest"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JonUK/eleventy-blog.git"
  },
  "author": "Jon Keeping",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/JonUK/eleventy-blog/issues"
  },
  "homepage": "https://github.com/JonUK/eleventy-blog#readme",
  "devDependencies": {
    "@11ty/eleventy": "^3.0.0",
    "jest": "^29.7.0",
    "moment": "^2.29.1"
  },
  "dependencies": {
    "@jest/globals": "latest"
  }
}
</file>

<file path="README.md">
# eleventy-blog
An example blog site using Eleventy that covers fundamental functionality.

The following article accompanies this repo.

## Creating A Blog With Eleventy
[https://keepinguptodate.com/pages/2019/06/creating-blog-with-eleventy/](https://keepinguptodate.com/pages/2019/06/creating-blog-with-eleventy/)

A demo of the blog is hosted on Netlify:
[https://dazzling-almeida-ca0492.netlify.com/](https://dazzling-almeida-ca0492.netlify.com/)

## Branches
This repo contains several branches that allow you to checkout the code at various stages of development.

## How do I run the site?
```
npm install
npm run serve
```

Then access the site with the URL [http://localhost:8080/](http://localhost:8080/) (your port may vary).
</file>

<file path="LICENSE">
MIT License

Copyright (c) 2019 Jon Keeping

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</file>

</files>
